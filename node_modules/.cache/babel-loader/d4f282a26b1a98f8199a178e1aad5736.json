{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinay\\\\Desktop\\\\world Map App\\\\my-app\\\\src\\\\components\\\\MapChart\\\\MapChart.js\";\nimport React, { memo } from \"react\";\nimport { ZoomableGroup, ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst rounded = num => {\n  if (num > 1000000000) {\n    return Math.round(num / 100000000) / 10 + \"Bn\";\n  } else if (num > 1000000) {\n    return Math.round(num / 100000) / 10 + \"M\";\n  } else {\n    return Math.round(num / 100) / 10 + \"K\";\n  }\n};\n\nconst MapChart = _ref => {\n  let {\n    setTooltipContent\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n      \"data-tip\": \"\",\n      projectionConfig: {\n        scale: 100\n      },\n      children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n        children: /*#__PURE__*/_jsxDEV(Geographies, {\n          geography: geoUrl,\n          children: _ref2 => {\n            let {\n              geographies\n            } = _ref2;\n            return geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n              geography: geo,\n              onMouseEnter: () => {\n                const {\n                  NAME,\n                  POP_EST\n                } = geo.properties;\n                setTooltipContent(`${NAME} — ${rounded(POP_EST)}`);\n              },\n              onMouseLeave: () => {\n                setTooltipContent(\"\");\n              },\n              style: {\n                default: {\n                  fill: \"#9299B8\",\n                  outline: \"none\"\n                },\n                hover: {\n                  stroke: \"#3689FD\",\n                  fill: \"#9299B8\",\n                  outline: \"none\"\n                },\n                pressed: {\n                  fill: \"black\",\n                  outline: \"none\"\n                }\n              }\n            }, geo.rsmKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MapChart;\nexport default _c2 = /*#__PURE__*/memo(MapChart);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapChart\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/vinay/Desktop/world Map App/my-app/src/components/MapChart/MapChart.js"],"names":["React","memo","ZoomableGroup","ComposableMap","Geographies","Geography","geoUrl","rounded","num","Math","round","MapChart","setTooltipContent","scale","geographies","map","geo","NAME","POP_EST","properties","default","fill","outline","hover","stroke","pressed","rsmKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AAGA,SACEC,aADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,SAJF,QAKO,mBALP;;AAOA,MAAMC,MAAM,GACV,wGADF;;AAGA,MAAMC,OAAO,GAAGC,GAAG,IAAI;AACrB,MAAIA,GAAG,GAAG,UAAV,EAAsB;AACpB,WAAOC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,SAAjB,IAA8B,EAA9B,GAAmC,IAA1C;AACD,GAFD,MAEO,IAAIA,GAAG,GAAG,OAAV,EAAmB;AACxB,WAAOC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,MAAjB,IAA2B,EAA3B,GAAgC,GAAvC;AACD,GAFM,MAEA;AACL,WAAOC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,GAAjB,IAAwB,EAAxB,GAA6B,GAApC;AACD;AACF,CARD;;AAUA,MAAMG,QAAQ,GAAG,QAA2B;AAAA,MAA1B;AAAEC,IAAAA;AAAF,GAA0B;AAC1C,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE,QAAC,aAAD;AAAe,kBAAS,EAAxB;AAA2B,MAAA,gBAAgB,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAA7C;AAAA,6BACE,QAAC,aAAD;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEP,MAAxB;AAAA,oBACG;AAAA,gBAAC;AAAEQ,cAAAA;AAAF,aAAD;AAAA,mBACCA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,iBACjB,QAAC,SAAD;AAEE,cAAA,SAAS,EAAEA,GAFb;AAGE,cAAA,YAAY,EAAE,MAAM;AAClB,sBAAM;AAAEC,kBAAAA,IAAF;AAAQC,kBAAAA;AAAR,oBAAoBF,GAAG,CAACG,UAA9B;AACAP,gBAAAA,iBAAiB,CAAE,GAAEK,IAAK,MAAKV,OAAO,CAACW,OAAD,CAAU,EAA/B,CAAjB;AACD,eANH;AAOE,cAAA,YAAY,EAAE,MAAM;AAClBN,gBAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD,eATH;AAUE,cAAA,KAAK,EAAE;AACLQ,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,IAAI,EAAE,SADC;AAEPC,kBAAAA,OAAO,EAAE;AAFF,iBADJ;AAKLC,gBAAAA,KAAK,EAAE;AACLC,kBAAAA,MAAM,EAAE,SADH;AAELH,kBAAAA,IAAI,EAAE,SAFD;AAGLC,kBAAAA,OAAO,EAAE;AAHJ,iBALF;AAULG,gBAAAA,OAAO,EAAE;AACPJ,kBAAAA,IAAI,EAAE,OADC;AAEPC,kBAAAA,OAAO,EAAE;AAFF;AAVJ;AAVT,eACON,GAAG,CAACU,MADX;AAAA;AAAA;AAAA;AAAA,oBADF,CADD;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CAzCD;;KAAMf,Q;AA2CN,kCAAeV,IAAI,CAACU,QAAD,CAAnB","sourcesContent":["import React, { memo } from \"react\";\n\n\nimport {\n  ZoomableGroup,\n  ComposableMap,\n  Geographies,\n  Geography\n} from \"react-simple-maps\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst rounded = num => {\n  if (num > 1000000000) {\n    return Math.round(num / 100000000) / 10 + \"Bn\";\n  } else if (num > 1000000) {\n    return Math.round(num / 100000) / 10 + \"M\";\n  } else {\n    return Math.round(num / 100) / 10 + \"K\";\n  }\n};\n\nconst MapChart = ({ setTooltipContent }) => {\n  return (\n    <div className=\"main\">\n      <ComposableMap data-tip=\"\" projectionConfig={{ scale: 100 }}>\n        <ZoomableGroup>\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map(geo => (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  onMouseEnter={() => {\n                    const { NAME, POP_EST } = geo.properties;\n                    setTooltipContent(`${NAME} — ${rounded(POP_EST)}`);\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent(\"\");\n                  }}\n                  style={{\n                    default: {\n                      fill: \"#9299B8\",\n                      outline: \"none\",                     \n                    },\n                    hover: {\n                      stroke: \"#3689FD\",\n                      fill: \"#9299B8\",\n                      outline: \"none\",                                       \n                    },\n                    pressed: {\n                      fill: \"black\",\n                      outline: \"none\"\n                    },                    \n                  }}\n                />\n              ))\n            }\n          </Geographies>\n        </ZoomableGroup>\n      </ComposableMap>\n    </div>\n  );\n};\n\nexport default memo(MapChart);\n"]},"metadata":{},"sourceType":"module"}